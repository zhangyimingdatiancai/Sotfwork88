<?xml version="1.0" encoding="UTF-8"?>

<!-- Generated by maven-plugin-tools 3.5 -->

<plugin>
  <name>JavaCPP</name>
  <description>The missing bridge between Java and native C++</description>
  <groupId>org.bytedeco</groupId>
  <artifactId>javacpp</artifactId>
  <version>1.5.5</version>
  <goalPrefix>javacpp</goalPrefix>
  <isolatedRealm>false</isolatedRealm>
  <inheritedByDefault>true</inheritedByDefault>
  <mojos>
    <mojo>
      <goal>build</goal>
      <description>A Maven Mojo to call the {@link Builder} (C++ header file -&gt; Java class -&gt; C++ JNI -&gt; native library).
Can also be considered as an example of how to use the Builder programmatically.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>process-classes</phase>
      <implementation>org.bytedeco.javacpp.tools.BuildMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>buildCommand</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Execute a build command instead of JavaCPP itself, and return.</description>
        </parameter>
        <parameter>
          <name>buildPath</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the path to the &quot;platform.buildpath&quot; property.</description>
        </parameter>
        <parameter>
          <name>buildPaths</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the paths to the &quot;platform.buildpath&quot; property.</description>
        </parameter>
        <parameter>
          <name>buildResource</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the path to the &quot;platform.buildresource&quot; property.</description>
        </parameter>
        <parameter>
          <name>buildResources</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the paths to the &quot;platform.buildresource&quot; property.</description>
        </parameter>
        <parameter>
          <name>classOrPackageName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Process only this class or package (suffixed with .* or .**).</description>
        </parameter>
        <parameter>
          <name>classOrPackageNames</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Process only these classes or packages (suffixed with .* or .**).</description>
        </parameter>
        <parameter>
          <name>classPath</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Load user classes from classPath.</description>
        </parameter>
        <parameter>
          <name>classPaths</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Load user classes from classPaths.</description>
        </parameter>
        <parameter>
          <name>clean</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Delete all files from {@link #outputDirectory} before generating anything in it.</description>
        </parameter>
        <parameter>
          <name>compile</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Compile and delete the generated .cpp files.</description>
        </parameter>
        <parameter>
          <name>compilerOptions</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Pass compilerOptions directly to compiler.</description>
        </parameter>
        <parameter>
          <name>configDirectory</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Also create config files for GraalVM native-image in directory.</description>
        </parameter>
        <parameter>
          <name>copyLibs</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Copy to output directory dependent libraries (link and preload).</description>
        </parameter>
        <parameter>
          <name>copyResources</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Copy to output directory resources listed in properties.</description>
        </parameter>
        <parameter>
          <name>deleteJniFiles</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Delete generated C++ JNI files after compilation</description>
        </parameter>
        <parameter>
          <name>encoding</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specify the character encoding used for input and output.</description>
        </parameter>
        <parameter>
          <name>environmentVariables</name>
          <type>java.util.Map</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add environment variables to the compiler subprocess.</description>
        </parameter>
        <parameter>
          <name>executablePath</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the path to the &quot;platform.executablepath&quot; property.</description>
        </parameter>
        <parameter>
          <name>executablePaths</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the paths to the &quot;platform.executablepath&quot; property.</description>
        </parameter>
        <parameter>
          <name>generate</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Generate .cpp files from Java interfaces if found, parsing from header files if not.</description>
        </parameter>
        <parameter>
          <name>header</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Generate header file with declarations of callbacks functions.</description>
        </parameter>
        <parameter>
          <name>includePath</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the path to the &quot;platform.includepath&quot; property.</description>
        </parameter>
        <parameter>
          <name>includePaths</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the paths to the &quot;platform.includepath&quot; property.</description>
        </parameter>
        <parameter>
          <name>includeResource</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the path to the &quot;platform.includeresource&quot; property.</description>
        </parameter>
        <parameter>
          <name>includeResources</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the paths to the &quot;platform.includeresource&quot; property.</description>
        </parameter>
        <parameter>
          <name>jarPrefix</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Also create a JAR file named {@code &lt;jarPrefix&gt;-&lt;platform&gt;.jar}.</description>
        </parameter>
        <parameter>
          <name>linkPath</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the path to the &quot;platform.linkpath&quot; property.</description>
        </parameter>
        <parameter>
          <name>linkPaths</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the paths to the &quot;platform.linkpath&quot; property.</description>
        </parameter>
        <parameter>
          <name>linkResource</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the path to the &quot;platform.linkresource&quot; property.</description>
        </parameter>
        <parameter>
          <name>linkResources</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the paths to the &quot;platform.linkresource&quot; property.</description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Output all generated files to outputDirectory.</description>
        </parameter>
        <parameter>
          <name>outputName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Output everything in a file named after given outputName.</description>
        </parameter>
        <parameter>
          <name>plugin</name>
          <type>org.apache.maven.plugin.descriptor.PluginDescriptor</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>preloadPath</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the path to the &quot;platform.preloadpath&quot; property.</description>
        </parameter>
        <parameter>
          <name>preloadPaths</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the paths to the &quot;platform.preloadpath&quot; property.</description>
        </parameter>
        <parameter>
          <name>preloadResource</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the path to the &quot;platform.preloadresource&quot; property.</description>
        </parameter>
        <parameter>
          <name>preloadResources</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the paths to the &quot;platform.preloadresource&quot; property.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>properties</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Load all properties from resource.</description>
        </parameter>
        <parameter>
          <name>propertyFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Load all properties from file.</description>
        </parameter>
        <parameter>
          <name>propertyKeysAndValues</name>
          <type>java.util.Properties</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set property keys to values.</description>
        </parameter>
        <parameter>
          <name>resourcePath</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the path to the &quot;platform.resourcepath&quot; property.</description>
        </parameter>
        <parameter>
          <name>resourcePaths</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the paths to the &quot;platform.resourcepath&quot; property.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Skip the execution.</description>
        </parameter>
        <parameter>
          <name>targetDirectories</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add to Maven project source directory of Java files generated by buildCommand.</description>
        </parameter>
        <parameter>
          <name>targetDirectory</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add to Maven project source directory of Java files generated by buildCommand.</description>
        </parameter>
        <parameter>
          <name>workingDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set the working directory of the build subprocess.</description>
        </parameter>
      </parameters>
      <configuration>
        <buildCommand implementation="java.lang.String[]">${javacpp.buildCommand}</buildCommand>
        <buildPath implementation="java.lang.String">${javacpp.buildPath}</buildPath>
        <buildPaths implementation="java.lang.String[]">${javacpp.buildPaths}</buildPaths>
        <buildResource implementation="java.lang.String">${javacpp.buildResource}</buildResource>
        <buildResources implementation="java.lang.String[]">${javacpp.buildResources}</buildResources>
        <classOrPackageName implementation="java.lang.String">${javacpp.classOrPackageName}</classOrPackageName>
        <classOrPackageNames implementation="java.lang.String[]">${javacpp.classOrPackageNames}</classOrPackageNames>
        <classPath implementation="java.lang.String" default-value="${project.build.outputDirectory}">${javacpp.classPath}</classPath>
        <classPaths implementation="java.lang.String[]">${javacpp.classPaths}</classPaths>
        <clean implementation="boolean" default-value="false">${javacpp.clean}</clean>
        <compile implementation="boolean" default-value="true">${javacpp.compile}</compile>
        <compilerOptions implementation="java.lang.String[]">${javacpp.compilerOptions}</compilerOptions>
        <configDirectory implementation="java.lang.String">${javacpp.configDirectory}</configDirectory>
        <copyLibs implementation="boolean" default-value="false">${javacpp.copyLibs}</copyLibs>
        <copyResources implementation="boolean" default-value="false">${javacpp.copyResources}</copyResources>
        <deleteJniFiles implementation="boolean" default-value="true">${javacpp.deleteJniFiles}</deleteJniFiles>
        <encoding implementation="java.lang.String">${javacpp.encoding}</encoding>
        <environmentVariables implementation="java.util.Map">${javacpp.environmentVariables}</environmentVariables>
        <executablePath implementation="java.lang.String">${javacpp.executablePath}</executablePath>
        <executablePaths implementation="java.lang.String[]">${javacpp.executablePaths}</executablePaths>
        <generate implementation="boolean" default-value="true">${javacpp.generate}</generate>
        <header implementation="boolean" default-value="false">${javacpp.header}</header>
        <includePath implementation="java.lang.String">${javacpp.includePath}</includePath>
        <includePaths implementation="java.lang.String[]">${javacpp.includePaths}</includePaths>
        <includeResource implementation="java.lang.String">${javacpp.includeResource}</includeResource>
        <includeResources implementation="java.lang.String[]">${javacpp.includeResources}</includeResources>
        <jarPrefix implementation="java.lang.String">${javacpp.jarPrefix}</jarPrefix>
        <linkPath implementation="java.lang.String">${javacpp.linkPath}</linkPath>
        <linkPaths implementation="java.lang.String[]">${javacpp.linkPaths}</linkPaths>
        <linkResource implementation="java.lang.String">${javacpp.linkResource}</linkResource>
        <linkResources implementation="java.lang.String[]">${javacpp.linkResources}</linkResources>
        <outputDirectory implementation="java.io.File">${javacpp.outputDirectory}</outputDirectory>
        <outputName implementation="java.lang.String">${javacpp.outputName}</outputName>
        <plugin implementation="org.apache.maven.plugin.descriptor.PluginDescriptor" default-value="${plugin}"/>
        <preloadPath implementation="java.lang.String">${javacpp.preloadPath}</preloadPath>
        <preloadPaths implementation="java.lang.String[]">${javacpp.preloadPaths}</preloadPaths>
        <preloadResource implementation="java.lang.String">${javacpp.preloadResource}</preloadResource>
        <preloadResources implementation="java.lang.String[]">${javacpp.preloadResources}</preloadResources>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <properties implementation="java.lang.String">${javacpp.properties}</properties>
        <propertyFile implementation="java.io.File">${javacpp.propertyFile}</propertyFile>
        <propertyKeysAndValues implementation="java.util.Properties">${javacpp.propertyKeysAndValues}</propertyKeysAndValues>
        <resourcePath implementation="java.lang.String">${javacpp.resourcePath}</resourcePath>
        <resourcePaths implementation="java.lang.String[]">${javacpp.resourcePaths}</resourcePaths>
        <skip implementation="boolean" default-value="false">${javacpp.skip}</skip>
        <targetDirectories implementation="java.lang.String[]">${javacpp.targetDirectories}</targetDirectories>
        <targetDirectory implementation="java.lang.String">${javacpp.targetDirectory}</targetDirectory>
        <workingDirectory implementation="java.io.File">${javacpp.workingDirectory}</workingDirectory>
      </configuration>
    </mojo>
    <mojo>
      <goal>cache</goal>
      <description>A Maven Mojo to call the {@link Loader} on all classes found in the project,
as well as call all {@code cachePackage()} methods found on them. It displays
to the standard output the directories cached, the former on a line starting
with &quot;PATH=&quot; and the latter on another line starting with &quot;PACKAGEPATH=&quot;.</description>
      <requiresDependencyResolution>compile+runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.bytedeco.javacpp.tools.CacheMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>plugin</name>
          <type>org.apache.maven.plugin.descriptor.PluginDescriptor</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
      </parameters>
      <configuration>
        <plugin implementation="org.apache.maven.plugin.descriptor.PluginDescriptor" default-value="${plugin}"/>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
      </configuration>
    </mojo>
    <mojo>
      <goal>parse</goal>
      <description>A {@link BuildMojo} that always forces {@link BuildMojo#generate} to false,
with the goal of parsing header files instead.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>generate-sources</phase>
      <implementation>org.bytedeco.javacpp.tools.ParseMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>buildCommand</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Execute a build command instead of JavaCPP itself, and return.</description>
        </parameter>
        <parameter>
          <name>buildPath</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the path to the &quot;platform.buildpath&quot; property.</description>
        </parameter>
        <parameter>
          <name>buildPaths</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the paths to the &quot;platform.buildpath&quot; property.</description>
        </parameter>
        <parameter>
          <name>buildResource</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the path to the &quot;platform.buildresource&quot; property.</description>
        </parameter>
        <parameter>
          <name>buildResources</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the paths to the &quot;platform.buildresource&quot; property.</description>
        </parameter>
        <parameter>
          <name>classOrPackageName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Process only this class or package (suffixed with .* or .**).</description>
        </parameter>
        <parameter>
          <name>classOrPackageNames</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Process only these classes or packages (suffixed with .* or .**).</description>
        </parameter>
        <parameter>
          <name>classPath</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Load user classes from classPath.</description>
        </parameter>
        <parameter>
          <name>classPaths</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Load user classes from classPaths.</description>
        </parameter>
        <parameter>
          <name>clean</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Delete all files from {@link #outputDirectory} before generating anything in it.</description>
        </parameter>
        <parameter>
          <name>compile</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Compile and delete the generated .cpp files.</description>
        </parameter>
        <parameter>
          <name>compilerOptions</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Pass compilerOptions directly to compiler.</description>
        </parameter>
        <parameter>
          <name>configDirectory</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Also create config files for GraalVM native-image in directory.</description>
        </parameter>
        <parameter>
          <name>copyLibs</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Copy to output directory dependent libraries (link and preload).</description>
        </parameter>
        <parameter>
          <name>copyResources</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Copy to output directory resources listed in properties.</description>
        </parameter>
        <parameter>
          <name>deleteJniFiles</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Delete generated C++ JNI files after compilation</description>
        </parameter>
        <parameter>
          <name>encoding</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specify the character encoding used for input and output.</description>
        </parameter>
        <parameter>
          <name>environmentVariables</name>
          <type>java.util.Map</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add environment variables to the compiler subprocess.</description>
        </parameter>
        <parameter>
          <name>executablePath</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the path to the &quot;platform.executablepath&quot; property.</description>
        </parameter>
        <parameter>
          <name>executablePaths</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the paths to the &quot;platform.executablepath&quot; property.</description>
        </parameter>
        <parameter>
          <name>generate</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Generate .cpp files from Java interfaces if found, parsing from header files if not.</description>
        </parameter>
        <parameter>
          <name>header</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Generate header file with declarations of callbacks functions.</description>
        </parameter>
        <parameter>
          <name>includePath</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the path to the &quot;platform.includepath&quot; property.</description>
        </parameter>
        <parameter>
          <name>includePaths</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the paths to the &quot;platform.includepath&quot; property.</description>
        </parameter>
        <parameter>
          <name>includeResource</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the path to the &quot;platform.includeresource&quot; property.</description>
        </parameter>
        <parameter>
          <name>includeResources</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the paths to the &quot;platform.includeresource&quot; property.</description>
        </parameter>
        <parameter>
          <name>jarPrefix</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Also create a JAR file named {@code &lt;jarPrefix&gt;-&lt;platform&gt;.jar}.</description>
        </parameter>
        <parameter>
          <name>linkPath</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the path to the &quot;platform.linkpath&quot; property.</description>
        </parameter>
        <parameter>
          <name>linkPaths</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the paths to the &quot;platform.linkpath&quot; property.</description>
        </parameter>
        <parameter>
          <name>linkResource</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the path to the &quot;platform.linkresource&quot; property.</description>
        </parameter>
        <parameter>
          <name>linkResources</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the paths to the &quot;platform.linkresource&quot; property.</description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Output all generated files to outputDirectory.</description>
        </parameter>
        <parameter>
          <name>outputName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Output everything in a file named after given outputName.</description>
        </parameter>
        <parameter>
          <name>plugin</name>
          <type>org.apache.maven.plugin.descriptor.PluginDescriptor</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>preloadPath</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the path to the &quot;platform.preloadpath&quot; property.</description>
        </parameter>
        <parameter>
          <name>preloadPaths</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the paths to the &quot;platform.preloadpath&quot; property.</description>
        </parameter>
        <parameter>
          <name>preloadResource</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the path to the &quot;platform.preloadresource&quot; property.</description>
        </parameter>
        <parameter>
          <name>preloadResources</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the paths to the &quot;platform.preloadresource&quot; property.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>properties</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Load all properties from resource.</description>
        </parameter>
        <parameter>
          <name>propertyFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Load all properties from file.</description>
        </parameter>
        <parameter>
          <name>propertyKeysAndValues</name>
          <type>java.util.Properties</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set property keys to values.</description>
        </parameter>
        <parameter>
          <name>resourcePath</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the path to the &quot;platform.resourcepath&quot; property.</description>
        </parameter>
        <parameter>
          <name>resourcePaths</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the paths to the &quot;platform.resourcepath&quot; property.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Skip the execution.</description>
        </parameter>
        <parameter>
          <name>targetDirectories</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add to Maven project source directory of Java files generated by buildCommand.</description>
        </parameter>
        <parameter>
          <name>targetDirectory</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add to Maven project source directory of Java files generated by buildCommand.</description>
        </parameter>
        <parameter>
          <name>workingDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set the working directory of the build subprocess.</description>
        </parameter>
      </parameters>
      <configuration>
        <buildCommand implementation="java.lang.String[]">${javacpp.buildCommand}</buildCommand>
        <buildPath implementation="java.lang.String">${javacpp.buildPath}</buildPath>
        <buildPaths implementation="java.lang.String[]">${javacpp.buildPaths}</buildPaths>
        <buildResource implementation="java.lang.String">${javacpp.buildResource}</buildResource>
        <buildResources implementation="java.lang.String[]">${javacpp.buildResources}</buildResources>
        <classOrPackageName implementation="java.lang.String">${javacpp.classOrPackageName}</classOrPackageName>
        <classOrPackageNames implementation="java.lang.String[]">${javacpp.classOrPackageNames}</classOrPackageNames>
        <classPath implementation="java.lang.String" default-value="${project.build.outputDirectory}">${javacpp.classPath}</classPath>
        <classPaths implementation="java.lang.String[]">${javacpp.classPaths}</classPaths>
        <clean implementation="boolean" default-value="false">${javacpp.clean}</clean>
        <compile implementation="boolean" default-value="true">${javacpp.compile}</compile>
        <compilerOptions implementation="java.lang.String[]">${javacpp.compilerOptions}</compilerOptions>
        <configDirectory implementation="java.lang.String">${javacpp.configDirectory}</configDirectory>
        <copyLibs implementation="boolean" default-value="false">${javacpp.copyLibs}</copyLibs>
        <copyResources implementation="boolean" default-value="false">${javacpp.copyResources}</copyResources>
        <deleteJniFiles implementation="boolean" default-value="true">${javacpp.deleteJniFiles}</deleteJniFiles>
        <encoding implementation="java.lang.String">${javacpp.encoding}</encoding>
        <environmentVariables implementation="java.util.Map">${javacpp.environmentVariables}</environmentVariables>
        <executablePath implementation="java.lang.String">${javacpp.executablePath}</executablePath>
        <executablePaths implementation="java.lang.String[]">${javacpp.executablePaths}</executablePaths>
        <generate implementation="boolean" default-value="true">${javacpp.generate}</generate>
        <header implementation="boolean" default-value="false">${javacpp.header}</header>
        <includePath implementation="java.lang.String">${javacpp.includePath}</includePath>
        <includePaths implementation="java.lang.String[]">${javacpp.includePaths}</includePaths>
        <includeResource implementation="java.lang.String">${javacpp.includeResource}</includeResource>
        <includeResources implementation="java.lang.String[]">${javacpp.includeResources}</includeResources>
        <jarPrefix implementation="java.lang.String">${javacpp.jarPrefix}</jarPrefix>
        <linkPath implementation="java.lang.String">${javacpp.linkPath}</linkPath>
        <linkPaths implementation="java.lang.String[]">${javacpp.linkPaths}</linkPaths>
        <linkResource implementation="java.lang.String">${javacpp.linkResource}</linkResource>
        <linkResources implementation="java.lang.String[]">${javacpp.linkResources}</linkResources>
        <outputDirectory implementation="java.io.File">${javacpp.outputDirectory}</outputDirectory>
        <outputName implementation="java.lang.String">${javacpp.outputName}</outputName>
        <plugin implementation="org.apache.maven.plugin.descriptor.PluginDescriptor" default-value="${plugin}"/>
        <preloadPath implementation="java.lang.String">${javacpp.preloadPath}</preloadPath>
        <preloadPaths implementation="java.lang.String[]">${javacpp.preloadPaths}</preloadPaths>
        <preloadResource implementation="java.lang.String">${javacpp.preloadResource}</preloadResource>
        <preloadResources implementation="java.lang.String[]">${javacpp.preloadResources}</preloadResources>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <properties implementation="java.lang.String">${javacpp.properties}</properties>
        <propertyFile implementation="java.io.File">${javacpp.propertyFile}</propertyFile>
        <propertyKeysAndValues implementation="java.util.Properties">${javacpp.propertyKeysAndValues}</propertyKeysAndValues>
        <resourcePath implementation="java.lang.String">${javacpp.resourcePath}</resourcePath>
        <resourcePaths implementation="java.lang.String[]">${javacpp.resourcePaths}</resourcePaths>
        <skip implementation="boolean" default-value="false">${javacpp.skip}</skip>
        <targetDirectories implementation="java.lang.String[]">${javacpp.targetDirectories}</targetDirectories>
        <targetDirectory implementation="java.lang.String">${javacpp.targetDirectory}</targetDirectory>
        <workingDirectory implementation="java.io.File">${javacpp.workingDirectory}</workingDirectory>
      </configuration>
    </mojo>
  </mojos>
  <dependencies>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <type>jar</type>
      <version>3.5.4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model</artifactId>
      <type>jar</type>
      <version>3.5.4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <type>jar</type>
      <version>3.5</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact</artifactId>
      <type>jar</type>
      <version>3.5.4</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.sisu</groupId>
      <artifactId>org.eclipse.sisu.plexus</artifactId>
      <type>jar</type>
      <version>0.3.3</version>
    </dependency>
    <dependency>
      <groupId>javax.enterprise</groupId>
      <artifactId>cdi-api</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>jsr250-api</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <type>jar</type>
      <version>1</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.sisu</groupId>
      <artifactId>org.eclipse.sisu.inject</artifactId>
      <type>jar</type>
      <version>0.3.3</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <type>jar</type>
      <version>3.1.0</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-classworlds</artifactId>
      <type>jar</type>
      <version>2.5.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.plugin-tools</groupId>
      <artifactId>maven-plugin-annotations</artifactId>
      <type>jar</type>
      <version>3.5.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-core</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-settings</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-settings-builder</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-repository-metadata</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model-builder</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-aether-provider</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.aether</groupId>
      <artifactId>aether-impl</artifactId>
      <type>jar</type>
      <version>1.7</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.aether</groupId>
      <artifactId>aether-spi</artifactId>
      <type>jar</type>
      <version>1.7</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.aether</groupId>
      <artifactId>aether-api</artifactId>
      <type>jar</type>
      <version>1.7</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.aether</groupId>
      <artifactId>aether-util</artifactId>
      <type>jar</type>
      <version>1.7</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.sisu</groupId>
      <artifactId>sisu-inject-plexus</artifactId>
      <type>jar</type>
      <version>1.4.2</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.sisu</groupId>
      <artifactId>sisu-inject-bean</artifactId>
      <type>jar</type>
      <version>1.4.2</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.sisu</groupId>
      <artifactId>sisu-guice</artifactId>
      <type>jar</type>
      <version>2.1.7</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-interpolation</artifactId>
      <type>jar</type>
      <version>1.14</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-component-annotations</artifactId>
      <type>jar</type>
      <version>1.5.5</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.plexus</groupId>
      <artifactId>plexus-sec-dispatcher</artifactId>
      <type>jar</type>
      <version>1.3</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.plexus</groupId>
      <artifactId>plexus-cipher</artifactId>
      <type>jar</type>
      <version>1.4</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <type>jar</type>
      <version>4.13.1</version>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-core</artifactId>
      <type>jar</type>
      <version>1.3</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <type>jar</type>
      <version>1.7.25</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <type>jar</type>
      <version>1.7.25</version>
    </dependency>
  </dependencies>
</plugin>